# Generated by Django 4.1.7 on 2023-10-21 15:35

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("nft_tokens", "0008_alter_collection_symbol"),
    ]

    operations = [
        migrations.RunSQL("CREATE SCHEMA IF NOT EXISTS social_opportunities;"),
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=30, unique=True)),
                ("logo", models.CharField(max_length=255)),
                ("owner", models.CharField(max_length=255)),
                (
                    "status_moderator",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("correct", "Correct"),
                            ("approved", "Approved"),
                            ("blocked", "Blocked"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
            ],
            options={
                "verbose_name": "Компания",
                "verbose_name_plural": "Компании",
                "db_table": 'social_opportunities"."company',
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("pass_to", "Pass To"),
                            ("vip_service", "VIP Service"),
                            ("discount", "Discount"),
                            ("gift", "Gift"),
                        ],
                        default="vip_service",
                        max_length=50,
                    ),
                ),
                ("preview", models.CharField(max_length=100)),
                ("description", models.CharField(max_length=500)),
                (
                    "status_moderator",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("correct", "Correct"),
                            ("approved", "Approved"),
                            ("blocked", "Blocked"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
                ("active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Сервис",
                "verbose_name_plural": "Сервисы",
                "db_table": 'social_opportunities"."service',
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="ServiceCollection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "collection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="nft_tokens.collection",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_opportunities.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Коллекции сервиса",
                "verbose_name_plural": "Коллекции сервисов",
                "db_table": 'social_opportunities"."service_collection',
                "ordering": ("-created_at",),
            },
        ),
        migrations.AddField(
            model_name="service",
            name="collections",
            field=models.ManyToManyField(
                through="social_opportunities.ServiceCollection",
                to="nft_tokens.collection",
            ),
        ),
        migrations.AddField(
            model_name="service",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="services",
                to="social_opportunities.company",
            ),
        ),
        migrations.CreateModel(
            name="ReviewServiceModerator",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("moderator", models.CharField(max_length=255)),
                ("wallet", models.CharField(max_length=255)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="social_opportunities.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отзыв сервиса",
                "verbose_name_plural": "Отзывы сервиса",
                "db_table": 'social_opportunities"."review_service',
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="ReviewCompanyModerator",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("moderator", models.CharField(max_length=255)),
                ("wallet", models.CharField(max_length=255)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="social_opportunities.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Отзыв компании",
                "verbose_name_plural": "Отзывы компании",
                "db_table": 'social_opportunities"."review_company',
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Contacts",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("country", models.CharField(max_length=255)),
                ("state", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("address", models.CharField(max_length=255)),
                ("site", models.CharField(max_length=255)),
                ("phone", models.CharField(max_length=255)),
                ("email", models.CharField(max_length=255)),
                ("social", models.CharField(max_length=255)),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="social_opportunities.service",
                    ),
                ),
            ],
            options={
                "verbose_name": "Контакт",
                "verbose_name_plural": "Контакты",
                "db_table": 'social_opportunities"."contacts',
                "ordering": ("-created_at",),
            },
        ),
    ]
