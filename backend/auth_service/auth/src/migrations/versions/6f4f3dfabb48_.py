"""empty message

Revision ID: 6f4f3dfabb48
Revises: 
Create Date: 2023-10-24 10:35:53.819662

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6f4f3dfabb48'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    op.execute(sa.text("""CREATE SCHEMA IF NOT EXISTS content;"""))

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name'),
    schema='content'
    )
    op.create_table('roles',
    sa.Column('name', sa.Enum('super_admin', 'admin', 'admin_platform', 'admin_account', 'admin_collection', 'owner_collection', 'moderator_wl', 'moderator_list', 'moderator_store', 'moderator_factory', 'moderator_delivery', 'moderator_opportunity', 'validator', 'user', name='roleenum', native_enum=False), nullable=False),
    sa.Column('public_name', sa.String(length=50), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('number'),
    sa.UniqueConstraint('public_name'),
    schema='content'
    )
    op.create_table('users',
    sa.Column('public_address', sa.String(), nullable=False),
    sa.Column('nonce', sa.String(length=64), nullable=False),
    sa.Column('fs_uniquifier', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('public_address'),
    sa.UniqueConstraint('public_address'),
    schema='content'
    )
    op.create_table('auth_token',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('public_address', sa.Text(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['public_address'], ['content.users.public_address'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('login_history',
    sa.Column('public_address', sa.Text(), nullable=False),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('user_agent', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['public_address'], ['content.users.public_address'], ),
    sa.PrimaryKeyConstraint('public_address', 'datetime'),
    schema='content',
    postgresql_partition_by='RANGE (datetime)'
    )
    op.create_table('profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('public_address', sa.Text(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('phone', sa.Integer(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['public_address'], ['content.users.public_address'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('image'),
    sa.UniqueConstraint('public_address'),
    sa.UniqueConstraint('username'),
    schema='content'
    )
    op.create_table('roles_permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role_number', sa.Integer(), nullable=True),
    sa.Column('permission_name', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['permission_name'], ['content.permissions.name'], ),
    sa.ForeignKeyConstraint(['role_number'], ['content.roles.number'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('permission_name', 'role_number', name='role_permission_inx'),
    schema='content'
    )
    op.create_table('roles_users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('public_address', sa.Text(), nullable=True),
    sa.Column('role_number', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('creator', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['public_address'], ['content.users.public_address'], ),
    sa.ForeignKeyConstraint(['role_number'], ['content.roles.number'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_address', 'role_number', name='role_user_inx'),
    schema='content'
    )
    op.create_table('resource_access',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('role_user_id', sa.UUID(), nullable=True),
    sa.Column('resource_id', sa.UUID(), nullable=True),
    sa.Column('sub_resource_id', sa.UUID(), nullable=True),
    sa.Column('sub_sub_resource_id', sa.UUID(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['role_user_id'], ['content.roles_users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('resource_id', 'sub_resource_id', 'sub_sub_resource_id', 'role_user_id', name='role_user_resource_inx'),
    schema='content'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resource_access', schema='content')
    op.drop_table('roles_users', schema='content')
    op.drop_table('roles_permissions', schema='content')
    op.drop_table('profiles', schema='content')
    op.drop_table('login_history', schema='content')
    op.drop_table('auth_token', schema='content')
    op.drop_table('users', schema='content')
    op.drop_table('roles', schema='content')
    op.drop_table('permissions', schema='content')
    # ### end Alembic commands ###
